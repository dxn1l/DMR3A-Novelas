package com.example.dmr3a_novelas.ui.Syncronized

import android.Manifest
import android.app.PendingIntent
import android.app.job.JobParameters
import android.app.job.JobService
import android.content.Context
import android.content.Intent
import android.content.pm.PackageManager
import android.util.Log
import androidx.core.app.ActivityCompat
import androidx.core.app.NotificationCompat
import androidx.core.app.NotificationManagerCompat
import com.example.dmr3a_novelas.DataBase.FirebaseNovelRepository
import com.example.dmr3a_novelas.MainActivity
import com.example.dmr3a_novelas.R

class DataSyncJobService : JobService() {
    private val novelRepository = FirebaseNovelRepository()

    override fun onStartJob(params: JobParameters?): Boolean {
        Log.d("DataSyncJobService", "Job started")

        novelRepository.getAllNovels(
            onResult = { novels ->

                Log.d("DataSyncJobService", "Data synchronized")
                sendNotification(this, "Data Sync", "Novels have been synchronized.")
                jobFinished(params, false)
            },
            onError = { error ->
                Log.e("DataSyncJobService", "Error syncing data: ${error.message}")
                jobFinished(params, true)
            }
        )
        return true
    }

    override fun onStopJob(params: JobParameters?): Boolean {
        Log.d("DataSyncJobService", "Job stopped")
        return true
    }

    private fun sendNotification(context: Context, title: String, message: String) {
        val intent = Intent(context, MainActivity::class.java).apply {
            flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK
        }
        val pendingIntent: PendingIntent = PendingIntent.getActivity(context, 0, intent,
            PendingIntent.FLAG_IMMUTABLE)

        val builder = NotificationCompat.Builder(context, MainActivity.CHANNEL_ID)
            .setSmallIcon(R.drawable.ic_notification)
            .setContentTitle(title)
            .setContentText(message)
            .setPriority(NotificationCompat.PRIORITY_DEFAULT)
            .setContentIntent(pendingIntent)
            .setAutoCancel(true)

        with(NotificationManagerCompat.from(context)) {
            if (ActivityCompat.checkSelfPermission(
                    /* context = */ this,
                    /* permission = */ Manifest.permission.POST_NOTIFICATIONS
                ) != PackageManager.PERMISSION_GRANTED
            ) {
                // TODO: Consider calling
                //    ActivityCompat#requestPermissions
                // here to request the missing permissions, and then overriding
                //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
                //                                          int[] grantResults)
                // to handle the case where the user grants the permission. See the documentation
                // for ActivityCompat#requestPermissions for more details.
                return
            }
            notify(1, builder.build())
        }
    }
}